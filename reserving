import tkinter as tk
from tkinter import messagebox

MAX_FLIGHTS = 5
MAX_SEATS = 50
MAX_USERNAME = 20
MAX_PASSWORD = 20

class Flight:
    def __init__(self, flight_number, destination, available_seats):
        self.flight_number = flight_number
        self.destination = destination
        self.available_seats = available_seats

class Reservation:
    def __init__(self, flight_number, seat_number, passenger_name, passenger_age):
        self.flight_number = flight_number
        self.seat_number = seat_number
        self.passenger_name = passenger_name
        self.passenger_age = passenger_age

def display_flights(flights):
    flight_info = "\nAvailable Flights\n" + "-"*70 + "\n"
    flight_info += "| {:<10} | {:<50} | {:<15} |\n".format("Flight No", "Destination", "Available Seats")
    flight_info += "-"*70 + "\n"
    for flight in flights:
        flight_info += "| {:<10} | {:<50} | {:<15} |\n".format(flight.flight_number, flight.destination, flight.available_seats)
    flight_info += "-"*70
    return flight_info

def reserve_seat(flights, reservations, flight_number, seat_number, passenger_name, passenger_age):
    flight = next((f for f in flights if f.flight_number == flight_number), None)

    if flight is not None:
        if 1 <= seat_number <= MAX_SEATS:
            if flight.available_seats > 0:
                flight.available_seats -= 1
                reservations.append(Reservation(flight_number, seat_number, passenger_name, passenger_age))
                messagebox.showinfo("Reservation", "Reservation successful!")
            else:
                messagebox.showwarning("Reservation", "Sorry, no available seats on this flight.")
        else:
            messagebox.showerror("Reservation", "Invalid seat number. Please enter a number between 1 and {}.".format(MAX_SEATS))
    else:
        messagebox.showerror("Reservation", "Flight not found.")

def display_reservations(reservations):
    reservation_info = "\nYour Reservations\n" + "-"*60 + "\n"
    reservation_info += "| {:<10} | {:<15} | {:<20} | {:<10} |\n".format("Flight No", "Seat No", "Passenger Name", "Age")
    reservation_info += "-"*60 + "\n"
    for reservation in reservations:
        reservation_info += "| {:<10} | {:<15} | {:<20} | {:<10} |\n".format(reservation.flight_number, reservation.seat_number,
                                                                             reservation.passenger_name, reservation.passenger_age)
    reservation_info += "-"*60
    return reservation_info

def login(username, password):
    if username == "ruban" and password == "admin123":
        return True
    else:
        messagebox.showerror("Login", "Invalid username or password. Please try again.")
        return False

def login_window():
    login_screen = tk.Tk()
    login_screen.title("Login")
    login_screen.geometry("300x200")

    def validate_login():
        username = username_entry.get()
        password = password_entry.get()
        if login(username, password):
            login_screen.destroy()
            main_window()

    username_label = tk.Label(login_screen, text="Username:")
    username_label.pack()
    username_entry = tk.Entry(login_screen, width=30)
    username_entry.pack()

    password_label = tk.Label(login_screen, text="Password:")
    password_label.pack()
    password_entry = tk.Entry(login_screen, width=30, show="*")
    password_entry.pack()

    login_button = tk.Button(login_screen, text="Login", command=validate_login)
    login_button.pack()

    login_screen.mainloop()

def main_window():
    main_screen = tk.Tk()
    main_screen.title("Flight Reservation System")

    flights = [
        Flight("F101", "New York", 10),
        Flight("F202", "Los Angeles", 20),
        Flight("F303", "Chicago", 15),
        Flight("F404", "Miami", 25),
        Flight("F505", "San Francisco", 30)
    ]

    reservations = []

    def show_flights():
        flights_info = display_flights(flights)
        flights_label.config(text=flights_info)

    def reserve():
        flight_number = flight_entry.get()
        passenger_name = name_entry.get()
        passenger_age = age_entry.get()
        try:
            seat_number = int(seat_entry.get())
            passenger_age = int(passenger_age)
            reserve_seat(flights, reservations, flight_number, seat_number, passenger_name, passenger_age)
            show_reservations()
            show_flights()
        except ValueError:
            messagebox.showerror("Reservation", "Please enter valid seat number and age.")

    def show_reservations():
        reservations_info = display_reservations(reservations)
        reservations_label.config(text=reservations_info)

    show_flights_button = tk.Button(main_screen, text="View available flights", command=show_flights)
    show_flights_button.pack(pady=10)

    flight_label = tk.Label(main_screen, text="Enter Flight Number:")
    flight_label.pack()
    flight_entry = tk.Entry(main_screen, width=30)
    flight_entry.pack()

    name_label = tk.Label(main_screen, text="Passenger Name:")
    name_label.pack()
    name_entry = tk.Entry(main_screen, width=30)
    name_entry.pack()

    age_label = tk.Label(main_screen, text="Passenger Age:")
    age_label.pack()
    age_entry = tk.Entry(main_screen, width=30)
    age_entry.pack()

    seat_label = tk.Label(main_screen, text="Enter Seat Number:")
    seat_label.pack()
    seat_entry = tk.Entry(main_screen, width=30)
    seat_entry.pack()

    reserve_button = tk.Button(main_screen, text="Reserve Seat", command=reserve)
    reserve_button.pack(pady=10)

    show_reservations_button = tk.Button(main_screen, text="View Reservations", command=show_reservations)
    show_reservations_button.pack(pady=10)

    reservations_label = tk.Label(main_screen, text="")
    reservations_label.pack(pady=10)

    main_screen.mainloop()

if __name__ == "__main__":
    login_window()
